
import java.text.DecimalFormat;
import java.util.*;

public class Project2
{

    public static int[] drawCard(){

        Random card = new Random();
        int cardKind = (card.nextInt(13) + 1);//generating random card kind

        int cardSuit =  card.nextInt(4);//generating random card suit

        int[] cardHand = new int[2];//array containing the kind and suit
        cardHand[0] = cardKind;
        cardHand[1] = cardSuit;

        return cardHand;

    }

    public static int[][] drawHand(){

        int[][] fiveCardHand = new int[5][2];//array representing fiveHands

        int[][] pastCardHand = new int[5][2];

        for(int i = 0; i< pastCardHand.length; i++){
            for (int j = 0; j <pastCardHand[i].length; j++) {
                pastCardHand[i][j] = -1;
            }
        }

        int [] tmp = new int[2];//array to hold one hand generated by drawCard method

        for(int i= 0; i<5; i++){
            tmp = drawCard();
            boolean isInPast = false;
            for (int j = 0; j < 5; j++) {
                if(tmp[0] == pastCardHand[j][0] && tmp[1] == pastCardHand[j][1]){
                    isInPast = true;
                }
            }
            if(!isInPast) {
                pastCardHand[i][0] = tmp[0];
                pastCardHand[i][1] = tmp[1];
                fiveCardHand[i][0] = tmp[0];
                fiveCardHand[i][1] = tmp[1];
            }
            else {
                i--;
            }
        }
        return fiveCardHand;
    }

    public static int classifyHand(int[] [] hand){

        int [] rank = new int[18];
        boolean flag = true;
        
        for(int i=0; i<hand.length; i++){//sorting hands in desending order
            int max = hand[i][0];
            int maxIndex = i;
            int maxSuit = hand[i][1];

            for(int j=i; j<hand.length; j++){

                if(hand[j][0] > max){
                    max = hand[j][0];
                    maxIndex = j;
                    maxSuit = hand[j][1];

                }
            }
            int temp = hand[i][0];
            int temp2 = hand[i][1];
            hand[i][0] = max;
            hand[i][1] = maxSuit;
            hand[maxIndex][0] = temp;
            hand[maxIndex][1] = temp2;

        }

        //Rank 1: Checking for straight flush
        int temp2 = hand[0][0];//kind
        int temp3 = hand[0][1];//suit

        for(int i =0; i<hand.length;i++){
            if(temp2 == hand[i][0] && temp3 == hand[i][1])
            {
            }
            else
            {
                if( i == hand.length-1 && hand[0][0] == 13 && hand[i][0] == 1 && temp3 == hand[i][1]){
                    rank[17] = 17;//checking for royal flush
                }
                else {
                    break;
                }
            }
            temp2--;
            if(i== hand.length-1)
                rank[16] = 16;
        }
        
        
      //Rank 2: checking for 4 of a kind
        int [] values = new int[13];
        for(int i=0; i<hand.length;i++){
            values[(hand[i][0])-1]++;

        }
        for(int i=0; i<values.length;i++){
            if(values[i] == 4)
                rank[15] = 15;
            }
        
        
        //Rank 3: checking for full house 
        int pair = 0;
        int threeOfAKind = 0;
        for(int i=0; i<values.length;i++){
            if(values[i] == 2) 
                pair++;
            }
            for(int i=0; i<values.length;i++){
            if(values[i] == 3)
                threeOfAKind++;
        }
        if(pair == 1 && threeOfAKind == 1)
            rank[14] = 14;
        
        //Rank 4: checking for flush   
        temp2 = hand[0][0];
        temp3 = hand[0][1];
        flag = true;
        for(int i =0; i<hand.length;i++){
            if(hand[0][1] != hand[i][1])
            {
                flag = false;
                break;
            }
        }
        if (flag == true) {  
            rank[13] = 13;
        }
        
        for (int i = rank.length-1; i > 0; i--) {
            if(rank[i] != 0 ){
                return rank[i];
            }
        }

        //Rank 5: Checking for straight
        flag = true;
        for(int i=0;i<hand.length-2;i++){
            if((hand[i][0]-1)!=hand[i+1][0]){
                flag=false;
            }
        }
        if(flag){
            rank[12] = 12;
        }

        
        //Rank 6: checking for 3 of a kind 
        threeOfAKind = 0; 
        for(int i=0; i<values.length;i++){
            if(values[i] == 2) 
                pair++;
            }
            for(int i=0; i<values.length;i++){
            if(values[i] == 3)
                threeOfAKind++;
        }
        if(threeOfAKind == 1)
            rank[11] = 11;
            
            
            
        //Rank 7: checking for two pair 
        pair = 0; 
        for(int i=0; i<values.length;i++){
            if(values[i] == 2) 
                pair++;
            }
            for(int i=0; i<values.length;i++){
            if(values[i] == 3)
                threeOfAKind++;
        }
        if(pair == 2)
            rank[10] = 10;
            
        //Rank 8: checking for one pair
        pair = 0;
        for(int i=0; i<values.length;i++){
            if(values[i] == 2) 
                pair++;
            }
            for(int i=0; i<values.length;i++){
            if(values[i] == 3)
                threeOfAKind++;
        }
        if(pair == 1)
            rank[9] =  9;

        
        //Rank 9: checking for high cards
        if(hand[4][0] == 1)
        {
            rank[8] = 8;
        }
        else{
            
        	if(hand[0][0]>=6){
        		rank[(hand[0][0])-6] = (hand[0][0])-6;
        	}
        	
        }

        for (int i = rank.length-1; i > 0; i--) {
            if(rank[i] != 0 ){
                return rank[i];
            }
        }

        //Should never happen
        return 0;
    }

    public static void main (String[] args){
        /*int test[][] = {{1,2},{13,2},{12,2},{11,2},{10,2}};
        System.out.println(classifyHand(test));*///just for testing classification
        
        int SevenHigh = 0;
        int EightHigh = 0;
        int NineHigh = 0;
        int TenHigh = 0;
        int JackHigh = 0;
        int QueenHigh = 0;
        int KingHigh = 0;
        int AceHigh = 0;
        int OnePair = 0;
        int TwoPair = 0;
        int threeOfAKind = 0;
        int Straight = 0;
        int Flush = 0;
        int FullHouse = 0;
        int fourOfAKind = 0;
        int StraightFlush = 0;
        int RoyalFlush = 0;

        double countBeforeFifty = 0;

        for(int i= 1; i<=10000000; i++){
        for(int j= 0; j<50; j++){
        if(i>50)
        {
        break;
        }
        int drawHand[][] = drawHand();
        int classifyHand = classifyHand(drawHand);

        switch(classifyHand){
        case 1: SevenHigh++;
        break;
        case 2: EightHigh++;
        break;
        case 3: NineHigh++;
        break;
        case 4: TenHigh++;
        break;
        case 5: JackHigh++;
        break;
        case 6: QueenHigh++;
        break;
        case 7: KingHigh++;
        break;
        case 8: AceHigh++;
        break;
        case 9: OnePair++;
        break;
        case 10: TwoPair++;
        break;
        case 11: threeOfAKind++;
        break;
        case 12: Straight++;
        break;
        case 13: Flush++;
        break;
        case 14: FullHouse++;
        break;
        case 15: fourOfAKind++;
        break;
        case 16: StraightFlush++;
        break;
        case 17: RoyalFlush++;
        break;
        }

        System.out.print("Hand " + i + ". ");

        for(int m= 0; m<5;m++){
        if(drawHand[m][0] == 1)
        System.out.print("A");
        else if(drawHand[m][0] == 13)
        System.out.print("K");
        else if (drawHand[m][0] == 12)
        System.out.print("Q");
        else if(drawHand[m][0] == 11)
        System.out.print("J");
        else
        System.out.print(drawHand[m][0]);

        if(drawHand[m][1] == 0)
        System.out.print("D ");
        else if(drawHand[m][1] == 1)
        System.out.print("H ");
        else if (drawHand[m][1] == 2)
        System.out.print("C ");
        else if(drawHand[m][1] == 3)
        System.out.print("S ");

        //System.out.println(" ");    
        }
        switch(classifyHand){
        case 1: System.out.println(": Seven High");
        break;
        case 2: System.out.println(": Eight High");
        break;
        case 3: System.out.println(": Nine High");
        break;
        case 4: System.out.println(": Ten High");
        break;
        case 5: System.out.println(": Jack High");
        break;
        case 6: System.out.println(": Queen High");
        break;
        case 7: System.out.println(": King High");
        break;
        case 8: System.out.println(": Ace High");
        break;
        case 9: System.out.println(": One Pair");
        break;
        case 10: System.out.println(": Two Pair");
        break; 
        case 11: System.out.println(": 3 of a Kind");
        break;
        case 12: System.out.println(": Straight");
        break;
        case 13: System.out.println(": Flush");
        break;
        case 14: System.out.println(": Full House");
        break;
        case 15: System.out.println(": 4 of a Kind");
        break;
        case 16: System.out.println(": Straight Flush");
        break;
        case 17: System.out.println(": Royal Flush");
        break;
        }
        System.out.println();

        i++;
        }

        if (i>=50)
        {
        int drawHand[][] = drawHand();
        int classifyHand = classifyHand(drawHand);
        //Condition to display on console, only when the count is less than 10. But we need to increase the count - Line no. 464
        if (classifyHand == 1 && SevenHigh < 10 || classifyHand == 2 && EightHigh < 10 || classifyHand == 3 && NineHigh < 10 ||classifyHand == 4 && TenHigh < 10 ||
        classifyHand == 5 && JackHigh < 10 ||classifyHand == 6 && QueenHigh < 10 ||classifyHand == 7 && KingHigh < 10 ||classifyHand == 8 && QueenHigh < 10 ||
        classifyHand == 9 && OnePair < 10 ||classifyHand == 10 && TwoPair < 10 ||classifyHand == 11 && threeOfAKind < 10 ||classifyHand == 12 && Straight < 10 ||
        classifyHand == 13 && Flush < 10 ||classifyHand == 14 && FullHouse < 10 ||classifyHand == 15 && fourOfAKind < 10 ||classifyHand == 16 && StraightFlush < 10 ||
        classifyHand == 17 && RoyalFlush < 10)
        {
        System.out.print("Hand " + i + ": ");
        for(int m= 0; m<5;m++){
        if(drawHand[m][0] == 1)
        System.out.print("A");
        else if(drawHand[m][0] == 13)
        System.out.print("K");
        else if (drawHand[m][0] == 12)
        System.out.print("Q");
        else if(drawHand[m][0] == 11)
        System.out.print("J");
        else
        System.out.print(drawHand[m][0]);

        if(drawHand[m][1] == 0)
        System.out.print("D ");
        else if(drawHand[m][1] == 1)
        System.out.print("H ");
        else if (drawHand[m][1] == 2)
        System.out.print("C ");
        else if(drawHand[m][1] == 3)
        System.out.print("S ");
   
        }
        switch(classifyHand){
        case 1: System.out.println(": Seven High");
        break;
        case 2: System.out.println(": Eight High");
        break;
        case 3: System.out.println(": Nine High");
        break;
        case 4: System.out.println(": Ten High");
        break;
        case 5: System.out.println(": Jack High");
        break;
        case 6: System.out.println(": Queen High");
        break;
        case 7: System.out.println(": King High");
        break;
        case 8: System.out.println(": Ace High");
        break;
        case 9: System.out.println(": One Pair");
        break;
        case 10: System.out.println(": Two Pair");
        break; 
        case 11: System.out.println(": 3 of a Kind");
        break;
        case 12: System.out.println(": Straight");
        break;
        case 13: System.out.println(": Flush");
        break;
        case 14: System.out.println(": Full House");
        break;
        case 15: System.out.println(": 4 of a Kind");
        break;
        case 16: System.out.println(": Straight Flush");
        break;
        case 17: System.out.println(": Royal Flush");
        break;
        }
        }

        switch(classifyHand){
        case 1: SevenHigh++;
        break;
        case 2: EightHigh++;
        break;
        case 3: NineHigh++;
        break;
        case 4: TenHigh++;
        break;
        case 5: JackHigh++;
        break;
        case 6: QueenHigh++;
        break;
        case 7: KingHigh++;
        break;
        case 8: AceHigh++;
        break;
        case 9: OnePair++;
        break;
        case 10: TwoPair++;
        break;
        case 11: threeOfAKind++;
        break;
        case 12: Straight++;
        break;
        case 13: Flush++;
        break;
        case 14: FullHouse++;
        break;
        case 15: fourOfAKind++;
        break;
        case 16: StraightFlush++;
        break;
        case 17: RoyalFlush++;
        break;
        }
        }
        }
        
   System.out.println();
   
        DecimalFormat newFormat = new DecimalFormat("#.#####");
   
        double divideBy = 10000000;
        System.out.println("Seven high: " + newFormat.format((SevenHigh/divideBy)*100) + "%");
        System.out.println("Eight high: " + newFormat.format((EightHigh/divideBy)*100) + "%");
        System.out.println("Nine high: " + newFormat.format((NineHigh/divideBy)*100) + "%");
        System.out.println("Ten high: " + newFormat.format((TenHigh/divideBy)*100) + "%");
        System.out.println("Jack high: " + newFormat.format((JackHigh/divideBy)*100) + "%");
        System.out.println("Queen high: " + newFormat.format((QueenHigh/divideBy)*100) + "%");
        System.out.println("King high: " + newFormat.format((KingHigh/divideBy)*100) + "%");
        System.out.println("Ace high: " + newFormat.format((AceHigh/divideBy)*100) + "%");
        System.out.println();
        System.out.println("High Card: " + newFormat.format((((SevenHigh + EightHigh + NineHigh + TenHigh + JackHigh + QueenHigh + KingHigh + AceHigh)/(divideBy))*100)) + "%");
        System.out.println("One Pair: " + newFormat.format((OnePair/divideBy)*100) + "%");
        System.out.println("Two Pair: " + newFormat.format((TwoPair/divideBy)*100) + "%");
        System.out.println("3 of a Kind: " + newFormat.format((threeOfAKind/divideBy)*100) + "%");
        System.out.println("Straight: " + newFormat.format((Straight/divideBy)*100) + "%");
        System.out.println("Flush: " + newFormat.format((Flush/divideBy)*100) + "%");
        System.out.println("Full house: " + newFormat.format((FullHouse/divideBy)*100) + "%");
        System.out.println("4 of a kind: " + newFormat.format((fourOfAKind/divideBy)*100) + "%");
        System.out.println("Straight Flush: " + newFormat.format((StraightFlush/divideBy)*100) + "%");
        System.out.println("Royal Flush: " + newFormat.format((RoyalFlush/divideBy)*100) + "%");
    

}
}
